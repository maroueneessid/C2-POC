syntax = "proto3";

option go_package = "simpleGRPC/proto_defs";

import "google/protobuf/empty.proto";



message Session {
    AssetRegistration basicInfo = 1;
    Task task = 2;
    bool alive = 3;
}

message None { }

message HistoryQuery {
    string SessionId = 1;
    string History = 2;
}

// First message to the Server
message AssetRegistration {
    sfixed32 MagicNb = 1; 
    string SessionId = 2;
    string Hostname = 3;
    string Username = 4;
    string OS = 5;
    repeated string IP = 6;
}

// Registration Response
message RegistrationConfirmation {
    bool Confirmed = 1;
}

// Subsequent message once registered
message AssetResponse {
    string SessionId = 1;
    TaskIO out = 2;
}

// Message to which the client will respond
message ServerOrder {
    string SessionId = 1;
    TaskIO in = 2;

}

message Task {
    TaskIO in = 1;
    TaskIO out = 2;

}

message TaskIO {
    string Text = 1;
    bytes Binary = 2;
}



// Service definition
service AssetService {
    // Register asset (ServerSide)
    rpc RegisterAsset(AssetRegistration) returns (RegistrationConfirmation);


    // Send order from server and get asset response (ServerSide)
    rpc SendOrder(ServerOrder) returns (google.protobuf.Empty);


    // Send response after asset registration (ClientSide)
    rpc SendResponse(AssetResponse) returns (google.protobuf.Empty);

    rpc CheckIn(AssetResponse) returns (ServerOrder);
    
    rpc CheckSession(None) returns (stream Session);

    rpc GetHistory(HistoryQuery) returns (HistoryQuery);


}



